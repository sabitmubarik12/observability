# values.yaml
# Fluent Bit Configuration with Kubernetes Metadata Enrichment

kind: DaemonSet

image:
  repository: cr.fluentbit.io/fluent/fluent-bit
  tag: "2.0.11"
  pullPolicy: IfNotPresent

serviceAccount:
  create: true
  # If using AWS EKS, add IRSA annotations
  annotations: {}

rbac:
  create: true
  rules:
    - apiGroups: [""]
      resources: ["namespaces", "pods", "pods/logs"]
      verbs: ["get", "list", "watch"]

config:
  service: |
    [SERVICE]
        Daemon Off
        Flush 1
        Log_Level info
        Parsers_File /fluent-bit/etc/parsers.conf
        Parsers_File /fluent-bit/etc/conf/custom_parsers.conf
        HTTP_Server On
        HTTP_Listen 0.0.0.0
        HTTP_Port 2020
        Health_Check On

  inputs: |
    [INPUT]
        Name              tail
        Path              /var/log/containers/*.log
        Parser            docker
        Tag               kube.*
        Mem_Buf_Limit     10MB
        Skip_Long_Lines   On
        DB                /var/log/flb_kube.db
        Refresh_Interval  10
        Ignore_Older      1h
        # Uncomment the following line if your logs require multiline processing (e.g., Java stacktraces)
        # Parser_Firstline  multiline_java

  filters: |
    [FILTER]
        Name                kubernetes
        Match               kube.*
        Kube_URL            https://kubernetes.default.svc:443
        Kube_CA_File        /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        Kube_Token_File     /var/run/secrets/kubernetes.io/serviceaccount/token
        Kube_Tag_Prefix     kube.var.log.containers.
        Merge_Log           On
        Merge_Log_Key       log_processed
        Keep_Log            Off
        K8S-Logging.Parser  On
        K8S-Logging.Exclude On
        Labels              On
        Annotations         On

    [FILTER]
        Name                nest
        Match               *
        Operation           lift
        Nested_under        kubernetes
        Add_prefix          kubernetes_

  outputs: |
    [OUTPUT]
        Name                  es
        Match                 *
        Host                  16.162.179.143
        Port                  9200
        Logstash_Format       On
        Logstash_Prefix       kchat-dev
        Retry_Limit           False
        Replace_Dots          On
        Buffer_Size           10MB
        Generate_ID           On
        suppress_type_name    On

  customParsers: |
    # Multiline Java Stacktrace Parser
    [MULTILINE_PARSER]
        Name          multiline_java
        Type          regex
        Rule          "start_state"   "/(\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\.\d+Z)\s+\[.*?\]\s+\w+\s+\d+/"  "cont"
        Rule          "cont"          "/^(?!\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\.\d+Z).*/"                    "cont"

    [PARSER]
        Name          docker
        Format        json
        Time_Key      time
        Time_Format   %Y-%m-%dT%H:%M:%S.%L
        Time_Keep     On

    [PARSER]
        Name          cri
        Format        regex
        Regex         ^(?<time>[^ ]+) (?<stream>stdout|stderr) (?<logtag>[^ ]*) (?<message>.*)$
        Time_Key      time
        Time_Format   %Y-%m-%dT%H:%M:%S.%L%z

daemonSetVolumes:
  - name: varlog
    hostPath:
      path: /var/log
  - name: varlibdockercontainers
    hostPath:
      path: /var/lib/docker/containers
  - name: etcmachineid
    hostPath:
      path: /etc/machine-id
      type: File

daemonSetVolumeMounts:
  - name: varlog
    mountPath: /var/log
  - name: varlibdockercontainers
    mountPath: /var/lib/docker/containers
    readOnly: true
  - name: etcmachineid
    mountPath: /etc/machine-id
    readOnly: true

resources:
  limits:
    memory: "500Mi"
    cpu: "500m"
  requests:
    memory: "100Mi"
    cpu: "100m"
